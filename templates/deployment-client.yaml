{{- if .Values.client }}
{{- if ne .Values.client.enabled false  }}
{{- $nm := include "opal.clientName" . | quote }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $nm }}
  labels:
    {{- include "opal.clientLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.client.replicas }}
  selector:
    matchLabels:
      {{- include "opal.clientSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "opal.clientLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.client.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "opal.clientServiceAccountName" . }}
      {{- with .Values.client.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.client.opaStartupData }}
      volumes:
        - name: opa-startup-data
          configMap:
            name: opa-startup-data
            defaultMode: 0444
      {{- end }}
      containers:
        - name: opal-client
          {{- with .Values.client.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "opal.clientImage" . | quote }}
          imagePullPolicy: {{ .Values.client.imagePullPolicy | default "IfNotPresent" | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.client.port }}
              protocol: TCP
            - name: opa
              containerPort: {{ .Values.client.opaPort }}
              protocol: TCP
          env:
            - name: UVICORN_NUM_WORKERS
              value: "1"
          {{- if .Values.server }}
            {{- if .Values.client.serverUrl }}
            - name: OPAL_SERVER_URL
              value: {{ .Values.client.serverUrl | quote }}
            {{- else }}
            - name: OPAL_SERVER_URL
              value: {{ printf "http://%s:%v" (include "opal.serverName" .) .Values.server.port | quote }}
            {{- end}}
            {{- if not (or (.Values.server.dataConfigSources.external_source_url) (.Values.server.dataConfigSources.config) (hasKey .Values.client.extraEnv "OPAL_DATA_UPDATER_ENABLED") ) }}
            - name: OPAL_DATA_UPDATER_ENABLED
              value: "False"
            {{- end }}
          {{- end }}
          {{- if .Values.client.extraEnv }}
          {{- range $name, $value := .Values.client.extraEnv }}
            - name: {{ $name }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.client.secrets }}
          envFrom:
          {{- range $name := .Values.client.secrets }}
            - secretRef:
                name: {{ $name }}
          {{- end }}
          {{- end }}
          {{- if .Values.client.opaStartupData }}
          volumeMounts:
            - mountPath: /opt/opa/startup-data
              name: opa-startup-data
              readOnly: true
          {{- end }}
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            failureThreshold: 5
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 15

          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            failureThreshold: 5
            timeoutSeconds: 10
            periodSeconds: 30
          {{- if .Values.client.resources }}
          resources:
            {{- toYaml .Values.client.resources | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}

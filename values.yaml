image:
  client:
    registry: docker.io
    repository: permitio/opal-client
  server:
    registry: docker.io
    repository: permitio/opal-server
  pgsql:
    registry: docker.io
    repository: postgres
    tag: alpine

server:
  port: 7002
  policyRepoUrl: "https://github.com/permitio/opal-example-policy-repo"
  policyRepoSshKey: null
  policyRepoClonePath: null
  policyRepoMainBranch: null
  pollingInterval: 30
  dataConfigSources:
    # Option #1 - No data sources
    config:
      entries: []

    # Option #2 - Dynamically get data sources
    # external_source_url: "https://your-api.com/path/to/api/endpoint"

    # Option #3 - Example static data sources (endpoint is empty by default)
    # config:
    #   entries:
    #   - url: http://opal-server:7002/policy-data
    #     topics: ["policy_data"]
    #     dst_path: "/static"

    # Option #4 - Leave config empty and instead supply using the OPAL_DATA_CONFIG_SOURCES environment variable through env or secret
    # config: null

  broadcastUri: null
  broadcastPgsql: true
  uvicornWorkers: 4
  replicas: 1
  extraEnv: {}
  # "CUSTOM_ENV_VAR": "VALUE"
  # Additional secrets to mount as environment on the server
  secrets:
    []
    # - my-secret-server-data

client:
  port: 7000
  opaPort: 8181
  replicas: 1
  # If you need to specify a custom hostname for the opal-sever, configure the serverUrl property
  # serverUrl: http://custom-hostname-for-opal:opal-port
  extraEnv: {}
  # Additional secrets to mount as environment on the client
  secrets:
    []
    # - my-secret-client-data

# Additional resources to deploy in this release
# Each element as a string and supports templates
extraObjects:
  []
  # - |-
  #   apiVersion: v1
  #   kind: Secret
  #   metadata:
  #     name: my-secret-server-data
  #     labels:
  #   {{- include "opal.serverLabels" . | nindent 4}}
  #   type: Opaque
  #   data:
  #     OPAL_AUTH_PRIVATE_KEY_PASSPHRASE: "passphrase"
  #     OPAL_AUTH_PUBLIC_KEY: "pubkey"
  #     OPAL_AUTH_PRIVATE_KEY: "privkey"
  #     OPAL_BROADCAST_URI: "user:pass@host:port/db"
  # - |-
  #   apiVersion: v1
  #   kind: Secret
  #   metadata:
  #     name: my-secret-client-data
  #     labels:
  #   {{- include "opal.clientLabels" . | nindent 4 }}
  #   type: Opaque
  #   data:
  #     OPAL_CLIENT_TOKEN: "client-token"
